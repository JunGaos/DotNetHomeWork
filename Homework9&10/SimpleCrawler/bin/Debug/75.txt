<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin-when-crossorigin" />
    
    
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>追逐时光者 - 博客园</title>
    <link id="favicon" rel="shortcut icon" href="//common.cnblogs.com/favicon.svg" type="image/svg+xml" />
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=zS6-e1bxywlu3kpHvpr1J6MySwya3ztFtEnS7RYQ0Fk" />
    <link id="MainCss" rel="stylesheet" href="/skins/simplememory/bundle-simplememory.min.css?v=uknaX_hejnSu-njQgx4Hj1R0JiPLwUhFPUlwWNmWyB4" />
    <link type="text/css" rel="stylesheet" href="https://www.cnblogs.com/Can-daydayup/custom.css?v=LmkP54hcRGskffoWD2LHw4bSisg=" />
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/SimpleMemory/bundle-SimpleMemory-mobile.min.css" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/Can-daydayup/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/Can-daydayup/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/Can-daydayup/wlwmanifest.xml" />
    <script>
        var currentBlogId = 412744;
        var currentBlogApp = 'Can-daydayup';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var isBlogOwner = false;
        var skinName = 'SimpleMemory';
        var visitorUserId = '';
    </script>
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=yJQaJ16S00coMfzvh-NgF2zm2J87f5VfNamFdsnKHrc"></script>
    
    
    
</head>
<body class="no-navbar">
    <a name="top"></a>
        <div id="bannerbar" class="bannerbar-mobile formobile">
            <a href="https://www.aliyun.com/minisite/goods?userCode=swh7dvlt" target="_blank" onclick="ga('send', 'event', 'Link', 'click', 'aliyun-cps-blog-bannerbar-mobile')">
                <img src="https://img2020.cnblogs.com/blog/35695/202104/35695-20210428213541700-642740375.jpg" alt="" />
            </a>
        </div>
    <div id="top_nav" class="navbar forpc navbar-custom">
        <nav id="nav_main" class="navbar-main">
            <ul id="nav_left" class="navbar-list navbar-left">
                <li class="navbar-branding"><a href="https://www.cnblogs.com/" title="开发者的网上家园"><img src="/images/logo.svg?v=R9M0WmLAIPVydmdzE2keuvnjl-bPR7_35oHqtiBzGsM" alt="博客园Logo" /></a></li>
                <li><a href="/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-sitehome')">首页</a></li>
                <li><a href="https://news.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-news')">新闻</a></li>
                <li><a href="https://q.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-q')">博问</a></li>
                <li><a id="nav_brandzone" href="https://brands.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-brands')">专区</a></li>
                <li><a href="https://ing.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-ing')">闪存</a></li>
                <li><a href="https://edu.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-edu')">班级</a></li>
            </ul>
            <ul id="nav_right" class="navbar-list navbar-right">
                <li>
                    <form id="zzk_search" class="navbar-search" action="https://zzk.cnblogs.com/s" method="get">
                        <input name="w" id="zzk_search_input" placeholder="代码改变世界" type="text" tabindex="3" />
                        <button type="submit" id="zzk_search_button">
                            <img src="/images/aggsite/search.svg" alt="搜索" />
                        </button>
                    </form>
                </li>
                <li id="navbar_login_status" class="navbar-list">
                    <a class="navbar-user-info navbar-blog" href="https://i.cnblogs.com/EditPosts.aspx?opt=1" alt="写随笔" title="写随笔">
                        <img id="new_post_icon" class="navbar-icon" src="/images/aggsite/newpost.svg" alt="写随笔" />
                    </a>
                    <a id="navblog-myblog-icon" class="navbar-user-info navbar-blog" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx" alt="我的博客" title="我的博客">
                        <img id="myblog_icon" class="navbar-icon" src="/images/aggsite/myblog.svg" alt="我的博客" />
                    </a>
                    <a class="navbar-user-info navbar-message navbar-icon-wrapper" href="https://msg.cnblogs.com/" alt="短消息" title="短消息">
                        <img id="msg_icon" class="navbar-icon" src="/images/aggsite/message.svg?v=J0WS2P2iPgaIVgXxcAhliw4AFZIpaTWxtdoNAv9eiCA" alt="短消息" />
                        <span id="msg_count" style="display: none"></span>
                    </a>
                    <div id="user_info" class="navbar-user-info dropdown">
                        <a class="dropdown-button" href="https://home.cnblogs.com/">
                            <img id="user_icon" class="navbar-avatar" src="/images/aggsite/avatar-default.svg" alt="用户头像" />
                        </a>
                        <div class="dropdown-menu">
                            <a id="navblog-myblog-text" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx">我的博客</a>
                            <a href="https://home.cnblogs.com/">我的园子</a>
                            <a href="https://account.cnblogs.com/settings/account">账号设置</a>
                            <a href="javascript:void(0)" id="navbar_lite_mode_toggle" title="简洁模式会使用简洁款皮肤显示所有博客">
    简洁模式 <img id="navbar_lite_mode_on" src="/images/lite-mode-check.svg" class="hide" /><span id="navbar_lite_mode_spinner" class="hide">...</span>
</a>
                            <a href="javascript:void(0)" onclick="account.logout();">退出登录</a>
                        </div>
                    </div>
                    <a class="navbar-anonymous" href="https://account.cnblogs.com/signup/">注册</a>
                    <a class="navbar-anonymous" href="javascript:void(0);" onclick="account.login()">登录</a>
                </li>
            </ul>
        </nav>
    </div>

    <div id="page_begin_html">
        <!--添加快速置顶小火箭-->
<style>
#back-top {
     position: fixed;
     bottom: 10px;
     right: 5px;
     z-index: 99;
}
#back-top span {
     width: 50px;
     height: 64px;
     display: block;
     background:url(https://www.cnblogs.com/images/cnblogs_com/Can-daydayup/1376854/o_o_rocket.png) no-repeat center center;
}
#back-top a{outline:none}
</style>
<script type="text/javascript">
$(function() {
    // hide #back-top first
    $("#back-top").hide();
    // fade in #back-top
    $(window).scroll(function() {
        if ($(this).scrollTop() > 500) {
            $('#back-top').fadeIn();
        } else {
            $('#back-top').fadeOut();
        }
    });
    // scroll body to 0px on click
    $('#back-top a').click(function() {
        $('body,html').animate({
            scrollTop: 0
        }, 800);
        return false;
    });
});
</script>

<!--小火箭效果-->
<p id="back-top" style="display:none"><a href="#top"><span></span></a></p>
<a href="#home" title="回到顶部" id="toTop">
    <span id="arrow"></span>
</a>
    </div>
    <!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/Can-daydayup/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/Can-daydayup/">追逐时光者</a>
</h1>
<h2>
⚡️不积跬步无以至千里，不积小流无以成江河。


<a target="_blank" href="https://github.com/YSGStudyHards">  
<img style="position: absolute; top: -50px; right: -30px; z-index: 1" src="https://images.cnblogs.com/cnblogs_com/Can-daydayup/1368687/o_ForkmeGithub.png" alt="Fork me on GitHub">
</a></h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/Can-daydayup/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/%E8%BF%BD%E9%80%90%E6%97%B6%E5%85%89%E8%80%85">
联系</a></li>
<li>
<a id="blog_nav_rss" class="menu" href="javascript:void(0)" data-rss="https://www.cnblogs.com/Can-daydayup/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			<div id="blog_stats_place_holder"><script>loadBlogStats();</script></div>
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->
<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		





		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2021/05/02.html">2021年5月2日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/14716414.html">
    <span>
            <span>[置顶]</span>
        【新手指南】Android Studio中应用App的相关配置
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： 注意这是一个对于Android开发入门学习者而言的一个教程，因为自己平时很少使用Android进行原生应用的开发，对于使用Android Studio配置Android App应用的一些参数（如版本号，应用包名，应用图标，应用名称，起始页等）十分的陌生。这里主要记录下自己开发中的一些经验所得        <a href="https://www.cnblogs.com/Can-daydayup/p/14716414.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-05-02 14:40
追逐时光者
<span data-post-id="14716414" class="post-view-count">阅读(69)</span> 
<span data-post-id="14716414" class="post-comment-count">评论(0)</span> 
<span data-post-id="14716414" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14716414" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2021/04/17.html">2021年4月17日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/14609089.html">
    <span>
            <span>[置顶]</span>
        .NET HttpWebRequest（请求被中止: 未能创建 SSL/TLS 安全通道）和（基础连接已经关闭: 发送时发生错误）问题查找解决
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： 前段时间在对接第三方接口的时候发生了一个非常奇葩的问题，就是使用&#160;.NET Framework 4.6&#160;HttpWebRequest进行网络请求的相关问题。背景，关于调用第三方的接口都是使用使用自己封装的一个HttpWebRequestHepler帮助类，在本地开发时调用第三方接口都是正常的        <a href="https://www.cnblogs.com/Can-daydayup/p/14609089.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-04-17 19:06
追逐时光者
<span data-post-id="14609089" class="post-view-count">阅读(115)</span> 
<span data-post-id="14609089" class="post-comment-count">评论(2)</span> 
<span data-post-id="14609089" class="post-digg-count">推荐(5)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14609089" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2021/02/19.html">2021年2月19日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/14413914.html">
    <span>
            <span>[置顶]</span>
        VS Code使用Git可视化管理源代码详细教程
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： 随着VS Code的功能和插件的不断强大和完善，它已经成为了我们日常开发中一个必不可缺的伙伴了。在之前我曾经写过一篇SourceTree使用教程详解（一个git可视化管理神器，想要了解的话可以点击查看详情），这篇文章主要是对VS Code如何使用Git可视化管理我们的程序源代码。 VS Co        <a href="https://www.cnblogs.com/Can-daydayup/p/14413914.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-02-19 00:58
追逐时光者
<span data-post-id="14413914" class="post-view-count">阅读(4391)</span> 
<span data-post-id="14413914" class="post-comment-count">评论(27)</span> 
<span data-post-id="14413914" class="post-digg-count">推荐(52)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14413914" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2021/02/07.html">2021年2月7日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/14386782.html">
    <span>
            <span>[置顶]</span>
        C#/.NET/.NET Core推荐学习书籍（升职加薪，你值得拥有）
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： 作为一名程序员，我们无时无刻都要考虑着如何通过不断地学习来提升自己的核心竞争力。古人有云：“书中自有黄金屋，书中只有颜如玉”，说明了书籍的重要性，没错工作多年来，发现身边那些优秀的同事，大神都是喜欢看书，看文章，爱专研的人。因此，我们想要升职加薪，提升自己的竞争力需要我们在业余生活，假期中给        <a href="https://www.cnblogs.com/Can-daydayup/p/14386782.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-02-07 21:40
追逐时光者
<span data-post-id="14386782" class="post-view-count">阅读(5056)</span> 
<span data-post-id="14386782" class="post-comment-count">评论(24)</span> 
<span data-post-id="14386782" class="post-digg-count">推荐(52)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14386782" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2021/02/01.html">2021年2月1日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/14353082.html">
    <span>
            <span>[置顶]</span>
        非关系型数据库（NOSQL）和关系型数据库（SQL）区别详解
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： 在我们的日常开发中，关系型数据库和非关系型数据库的使用已经是一个成熟的软件产品开发过程中必不可却的存储数据的工具了。那么用了这么久的关系数据库和非关系型数据库你们都知道他们之间的区别了吗？下面我们来详细的介绍一下。 关系型数据库（SQL）： 什么是（SQL）关系型数据库： 关系型数据库指的是        <a href="https://www.cnblogs.com/Can-daydayup/p/14353082.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-02-01 00:07
追逐时光者
<span data-post-id="14353082" class="post-view-count">阅读(579)</span> 
<span data-post-id="14353082" class="post-comment-count">评论(2)</span> 
<span data-post-id="14353082" class="post-digg-count">推荐(9)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14353082" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2021/01/24.html">2021年1月24日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/14321010.html">
    <span>
            <span>[置顶]</span>
        .NET Core使用Source Link提高源代码调试体验和生产效率
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： 在我们日常开发过程中常常会使用到很多其他封装好的第三方中间件（NuGet依赖项）、类库或者是.NET框架中自带的库。但是当你想要对这些类库的方法设置断点调试，然后发现无法F11（逐语句）调试进源码中调用堆栈大部分显示为灰色，而不让您看到调用堆栈中较早发生的事情。如果可以设置断点并在NuGet        <a href="https://www.cnblogs.com/Can-daydayup/p/14321010.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-01-24 23:39
追逐时光者
<span data-post-id="14321010" class="post-view-count">阅读(2932)</span> 
<span data-post-id="14321010" class="post-comment-count">评论(22)</span> 
<span data-post-id="14321010" class="post-digg-count">推荐(40)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14321010" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2021/01/23.html">2021年1月23日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/14315774.html">
    <span>
            <span>[置顶]</span>
        Angular学习资料大全和常用语法汇总（让后端程序员轻松上手）
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： 首先为什么要写这样的一篇文章呢？主要是因为前段时间写过一些关于Angualr的相关实战文章，有些爱学习的小伙伴对这方面比较感兴趣，但是又不知道该怎么入手（因为认识我的大多数小伙伴都是后端的同学），所以今天准备出一篇Angular学习资料汇总和日常开发中使用比较频繁的语法总结。让更多的后端程序        <a href="https://www.cnblogs.com/Can-daydayup/p/14315774.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-01-23 00:41
追逐时光者
<span data-post-id="14315774" class="post-view-count">阅读(488)</span> 
<span data-post-id="14315774" class="post-comment-count">评论(5)</span> 
<span data-post-id="14315774" class="post-digg-count">推荐(8)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14315774" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2021/01/13.html">2021年1月13日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/14274932.html">
    <span>
            <span>[置顶]</span>
        DevOps，CI，CD，自动化简单介绍
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： 随着企业应用的不断迭代，不断扩大，应用的发布发布可能涉及多个团队，如pc端，手机端，小程序端等等。应用发布也就成为了一项高风险，高压力的超过过程，以及应用的开发迭代的沟通，测试成本也大大的变得不可控了。这时候就出现了DevOps管理理念，CI，CD以及强大的部署自动化手段确保部署任务的可重复        <a href="https://www.cnblogs.com/Can-daydayup/p/14274932.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-01-13 22:59
追逐时光者
<span data-post-id="14274932" class="post-view-count">阅读(553)</span> 
<span data-post-id="14274932" class="post-comment-count">评论(0)</span> 
<span data-post-id="14274932" class="post-digg-count">推荐(3)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14274932" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2020/12/28.html">2020年12月28日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/14176386.html">
    <span>
            <span>[置顶]</span>
        Angular实战之使用NG-ZORRO创建一个企业级中后台框架（进阶篇）
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： 上一篇文章我们讲了如何在创建的Angular项目中快速引入ng-zorro-antd企业中台组件库，并且快速构建后台管理页面框架模板。这一章主要介绍的是如何在创建好的后台管理页面框架的快速生成NG-ZORRO相关的组件，并且介绍Angular相关目录结构、生命周期函数，路由配置和使用相关知识        <a href="https://www.cnblogs.com/Can-daydayup/p/14176386.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-12-28 23:37
追逐时光者
<span data-post-id="14176386" class="post-view-count">阅读(564)</span> 
<span data-post-id="14176386" class="post-comment-count">评论(3)</span> 
<span data-post-id="14176386" class="post-digg-count">推荐(8)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14176386" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2020/12/23.html">2020年12月23日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/14170872.html">
    <span>
            <span>[置顶]</span>
        Angular实战之使用NG-ZORRO创建一个企业级中后台框架（入门篇）
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： 在之前的一篇文章已经介绍过了，公司正在使用NG-ZORRO组件库开发后台应用，并且详细的介绍了Angular开发环境的搭建和项目的创建。这篇文章就是为了让大家熟悉了解我们该如何在Angular项目中使用到NG-ZORRO UI组件库搭建后台管理框架。 NG-ZORRO介绍： 官网地址：htt        <a href="https://www.cnblogs.com/Can-daydayup/p/14170872.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-12-23 00:03
追逐时光者
<span data-post-id="14170872" class="post-view-count">阅读(758)</span> 
<span data-post-id="14170872" class="post-comment-count">评论(0)</span> 
<span data-post-id="14170872" class="post-digg-count">推荐(5)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14170872" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2020/12/21.html">2020年12月21日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/14166192.html">
    <span>
            <span>[置顶]</span>
        Angular入门，开发环境搭建，使用Angular CLI创建你的第一个Angular项目
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： 最近一直在使用阿里的NG-ZORRO（Angular组件库）开发公司后端的管理系统，写了一段时间的Angular以后发现对于我们.NET后端开发而言真是非常的友善。因此这篇文章主要是对这段时间使用Angular做一些小总结，希望可以帮到有需要的同学。 Angular学习前必备基础知识点： T        <a href="https://www.cnblogs.com/Can-daydayup/p/14166192.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-12-21 10:30
追逐时光者
<span data-post-id="14166192" class="post-view-count">阅读(891)</span> 
<span data-post-id="14166192" class="post-comment-count">评论(17)</span> 
<span data-post-id="14166192" class="post-digg-count">推荐(11)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14166192" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2020/11/10.html">2020年11月10日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/13676586.html">
    <span>
            <span>[置顶]</span>
        走进C# abstract，了解抽象类与接口的异同
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： 最近在研究.NET Core的一些类库源码的时候发现在底层类库中使用了大量的抽象类，然而发现自己搬砖这么多年好像从来没有在项目中使用抽象类或者抽象方法去实现某个功能模块，并且对修饰符Abstract概念也只懂得一些皮毛（也就是面试的时候会问下其基本作用）。当然，咱们不懂就要去慢慢的学习了解，        <a href="https://www.cnblogs.com/Can-daydayup/p/13676586.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-11-10 01:39
追逐时光者
<span data-post-id="13676586" class="post-view-count">阅读(653)</span> 
<span data-post-id="13676586" class="post-comment-count">评论(6)</span> 
<span data-post-id="13676586" class="post-digg-count">推荐(9)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13676586" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2020/09/11.html">2020年9月11日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/12593165.html">
    <span>
            <span>[置顶]</span>
        .NET Core使用NPOI将Excel中的数据批量导入到MySQL
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： 在之前的几篇博客中写过.NET Core使用NPOI导出Word和Excel的文章，今天把同样我们日常开发中比较常用的使用Excel导入数据到MySQL数据库中的文章给安排上。与此同时还把NPOI-ExportWordAndExcel-ImportExcelData这个开源项目升级到了.NE        <a href="https://www.cnblogs.com/Can-daydayup/p/12593165.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-09-11 23:31
追逐时光者
<span data-post-id="12593165" class="post-view-count">阅读(2081)</span> 
<span data-post-id="12593165" class="post-comment-count">评论(5)</span> 
<span data-post-id="12593165" class="post-digg-count">推荐(14)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12593165" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2020/08/01.html">2020年8月1日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/12638301.html">
    <span>
            <span>[置顶]</span>
        ASP.NET MVC+LayUI视频上传
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： 前段时间在使用APS.NET MVC+LayUI做视频上传功能的时，发现当上传一些内存比较大的视频就会提示上传失败，后来通过查阅相关资料发现.NET MVC框架为考虑安全问题，在运行时对请求的文件的长度（大小）做了限制默认为4MB（4096KB），因此我们需要在Web.Config中设置最大        <a href="https://www.cnblogs.com/Can-daydayup/p/12638301.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-08-01 01:52
追逐时光者
<span data-post-id="12638301" class="post-view-count">阅读(1415)</span> 
<span data-post-id="12638301" class="post-comment-count">评论(14)</span> 
<span data-post-id="12638301" class="post-digg-count">推荐(10)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12638301" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2020/06/23.html">2020年6月23日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/13128633.html">
    <span>
            <span>[置顶]</span>
        【最全面】SourceTree使用教程详解（连接远程仓库，克隆，拉取，提交，推送，新建/切换/合并分支，冲突解决，提交PR）
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： 俗话说的好工欲善其事必先利其器，Git分布式版本控制系统是我们日常开发中不可或缺的。目前市面上比较流行的Git可视化管理工具有SourceTree、Github Desktop、TortoiseGit，综合网上的一些文章分析和自己的日常开发实践心得个人比较推荐开发者使用SourceTree，        <a href="https://www.cnblogs.com/Can-daydayup/p/13128633.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-06-23 01:25
追逐时光者
<span data-post-id="13128633" class="post-view-count">阅读(13331)</span> 
<span data-post-id="13128633" class="post-comment-count">评论(12)</span> 
<span data-post-id="13128633" class="post-digg-count">推荐(23)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13128633" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2020/06/01.html">2020年6月1日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/12593599.html">
    <span>
            <span>[置顶]</span>
        ASP.NET Core MVC+Layui使用EF Core连接MySQL执行简单的CRUD操作
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： 本章主要通过一个完整的示例讲解ASP.NET Core MVC+EF Core对MySQL数据库进行简单的CRUD操作，希望能够为刚入门.NET Core的小伙伴们提供一个完整的参考实例。关于ASP.NET Core MVC+EF操作MsSQL Server详情请参考官方文档(https:/        <a href="https://www.cnblogs.com/Can-daydayup/p/12593599.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-06-01 21:30
追逐时光者
<span data-post-id="12593599" class="post-view-count">阅读(1902)</span> 
<span data-post-id="12593599" class="post-comment-count">评论(7)</span> 
<span data-post-id="12593599" class="post-digg-count">推荐(12)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12593599" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2020/04/11.html">2020年4月11日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/12676870.html">
    <span>
            <span>[置顶]</span>
        ASP.NET Core WEB API 使用element-ui文件上传组件el-upload执行手动文件文件，并在文件上传后清空文件
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： 从开始学习Vue到使用element-ui-admin已经有将近快两年的时间了，在之前的开发中使用element-ui上传组件el-upload都是直接使用文件选取后立即选择上传，今天刚好做了一个和之前类似的文件选择上传的需求，不过这次是需要手动点击按钮把文件上传到服务器中进行数据导入，而且        <a href="https://www.cnblogs.com/Can-daydayup/p/12676870.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-04-11 02:40
追逐时光者
<span data-post-id="12676870" class="post-view-count">阅读(2271)</span> 
<span data-post-id="12676870" class="post-comment-count">评论(2)</span> 
<span data-post-id="12676870" class="post-digg-count">推荐(13)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12676870" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2020/04/05.html">2020年4月5日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/12637100.html">
    <span>
            <span>[置顶]</span>
        ASP.NET Core单文件和多文件上传并保存到服务端
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： 在我们日常开发中，关于图片，视频，音频，文档等相关文件上传并保存到服务端中是非常常见的一个功能，今天主要是把自己在开发中常用的两种方式记录下来方便一下直接使用，并且希望能够帮助到有需要的同学！ 一、配置ASP.NET Core中的静态文件： 简单概述： 在ASP.NET Core应用中静态资        <a href="https://www.cnblogs.com/Can-daydayup/p/12637100.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-04-05 15:52
追逐时光者
<span data-post-id="12637100" class="post-view-count">阅读(1913)</span> 
<span data-post-id="12637100" class="post-comment-count">评论(12)</span> 
<span data-post-id="12637100" class="post-digg-count">推荐(10)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12637100" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2020/03/29.html">2020年3月29日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/12501400.html">
    <span>
            <span>[置顶]</span>
        .NET Core使用NPOI导出复杂，美观的Excel详解
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： 这段时间一直专注于数据报表的开发，当然涉及到相关报表的开发数据导出肯定是一个不可避免的问题啦。客户要求要导出优雅，美观的Excel文档格式的来展示数据，当时的第一想法就是使用NPOI开源库来做数据导出Excel文档（当时想想真香，网上随便搜一搜教程一大堆），但是当自己真正的实践起来才知道原来        <a href="https://www.cnblogs.com/Can-daydayup/p/12501400.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-03-29 19:37
追逐时光者
<span data-post-id="12501400" class="post-view-count">阅读(8397)</span> 
<span data-post-id="12501400" class="post-comment-count">评论(30)</span> 
<span data-post-id="12501400" class="post-digg-count">推荐(69)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12501400" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2019/12/08.html">2019年12月8日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/12006891.html">
    <span>
            <span>[置顶]</span>
        uni-app中使用scroll-view滚到底部时多次触发scrolltolower
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：一、前言、scroll-view基本属性： 前言： 前段时间使用scroll-view可滚动视图区域容器来做多个不同内容的展示（在我这个页面中同时使用了三个scroll-view做数据展示），因为这几个展示的内容的数据都比较的多，因此为了页面的数据加载顺畅决定使用上拉加载（简单的说就是数据分页显示）        <a href="https://www.cnblogs.com/Can-daydayup/p/12006891.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2019-12-08 20:39
追逐时光者
<span data-post-id="12006891" class="post-view-count">阅读(6092)</span> 
<span data-post-id="12006891" class="post-comment-count">评论(1)</span> 
<span data-post-id="12006891" class="post-digg-count">推荐(8)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12006891" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2021/05/02.html">2021年5月2日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/14716414.html">
    <span>
        【新手指南】Android Studio中应用App的相关配置
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： 注意这是一个对于Android开发入门学习者而言的一个教程，因为自己平时很少使用Android进行原生应用的开发，对于使用Android Studio配置Android App应用的一些参数（如版本号，应用包名，应用图标，应用名称，起始页等）十分的陌生。这里主要记录下自己开发中的一些经验所得        <a href="https://www.cnblogs.com/Can-daydayup/p/14716414.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-05-02 14:40
追逐时光者
<span data-post-id="14716414" class="post-view-count">阅读(69)</span> 
<span data-post-id="14716414" class="post-comment-count">评论(0)</span> 
<span data-post-id="14716414" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14716414" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2021/04/29.html">2021年4月29日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/14716393.html">
    <span>
        【Solve】InnerClass annotations are missing corresponding EnclosingMember annotations. Such InnerClass annotations are ignored
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：问题： 今天Android项目在build时出现了下面的警告： InnerClass annotations are missing corresponding EnclosingMember annotations. Such InnerClass annotations are ignored         <a href="https://www.cnblogs.com/Can-daydayup/p/14716393.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-04-29 01:25
追逐时光者
<span data-post-id="14716393" class="post-view-count">阅读(7)</span> 
<span data-post-id="14716393" class="post-comment-count">评论(0)</span> 
<span data-post-id="14716393" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14716393" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
            <div class="postSeparator"></div>
        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/14716369.html">
    <span>
        Android Studio在android Emulator中运行的项目黑屏
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： 最近在做一个Android相关的小项目，因为之前这方面的项目做的比较的少。今天在使用虚拟机调试的时候经常出现一些莫名其妙的问题，经过自己多次的尝试和搜索终于解决了这些问题。 问题： 每次run（运行）项目在android Emulator一直显示黑屏问题，如下如所示： 可能是没有检测到匹配的        <a href="https://www.cnblogs.com/Can-daydayup/p/14716369.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-04-29 00:40
追逐时光者
<span data-post-id="14716369" class="post-view-count">阅读(15)</span> 
<span data-post-id="14716369" class="post-comment-count">评论(2)</span> 
<span data-post-id="14716369" class="post-digg-count">推荐(1)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14716369" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2021/04/17.html">2021年4月17日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/14609089.html">
    <span>
        .NET HttpWebRequest（请求被中止: 未能创建 SSL/TLS 安全通道）和（基础连接已经关闭: 发送时发生错误）问题查找解决
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： 前段时间在对接第三方接口的时候发生了一个非常奇葩的问题，就是使用&#160;.NET Framework 4.6&#160;HttpWebRequest进行网络请求的相关问题。背景，关于调用第三方的接口都是使用使用自己封装的一个HttpWebRequestHepler帮助类，在本地开发时调用第三方接口都是正常的        <a href="https://www.cnblogs.com/Can-daydayup/p/14609089.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-04-17 19:06
追逐时光者
<span data-post-id="14609089" class="post-view-count">阅读(115)</span> 
<span data-post-id="14609089" class="post-comment-count">评论(2)</span> 
<span data-post-id="14609089" class="post-digg-count">推荐(5)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14609089" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2021/03/23.html">2021年3月23日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/14568243.html">
    <span>
        【.NET开发福音】使用Visual Studio将JSON格式数据自动转化为对应的类
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： 这段时间一直在做一个第三方平台的对接，对接第三方其实无非就是请求调用第三方的相关接口接收返回过来的相关参数。因此在这个过程中就会涉及大量的JSON响应参数或者请求参数转化为对应的实体类的情况，因为只有转化为对应的实体类我们才好进行相关的数据操作。那么问题来了，这样我们在遇到后很多JSON对象        <a href="https://www.cnblogs.com/Can-daydayup/p/14568243.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-03-23 00:10
追逐时光者
<span data-post-id="14568243" class="post-view-count">阅读(50)</span> 
<span data-post-id="14568243" class="post-comment-count">评论(0)</span> 
<span data-post-id="14568243" class="post-digg-count">推荐(2)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14568243" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2021/02/21.html">2021年2月21日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/14427040.html">
    <span>
        ASP.NET Core获取请求完整的Url
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：在ASP.NET项目中获取请求完整的Url： 获取System.Web命名空间下的类名为HttpRequestBase的Url方法： /// &lt;summary&gt;在派生类中替代时，获取有关当前请求的 URL 的信息。&lt;/summary&gt; /// &lt;returns&gt;包含有关当前请求的 URL 的信息的对        <a href="https://www.cnblogs.com/Can-daydayup/p/14427040.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-02-21 20:30
追逐时光者
<span data-post-id="14427040" class="post-view-count">阅读(559)</span> 
<span data-post-id="14427040" class="post-comment-count">评论(1)</span> 
<span data-post-id="14427040" class="post-digg-count">推荐(4)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14427040" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2021/02/19.html">2021年2月19日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/14413914.html">
    <span>
        VS Code使用Git可视化管理源代码详细教程
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： 随着VS Code的功能和插件的不断强大和完善，它已经成为了我们日常开发中一个必不可缺的伙伴了。在之前我曾经写过一篇SourceTree使用教程详解（一个git可视化管理神器，想要了解的话可以点击查看详情），这篇文章主要是对VS Code如何使用Git可视化管理我们的程序源代码。 VS Co        <a href="https://www.cnblogs.com/Can-daydayup/p/14413914.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-02-19 00:58
追逐时光者
<span data-post-id="14413914" class="post-view-count">阅读(4391)</span> 
<span data-post-id="14413914" class="post-comment-count">评论(27)</span> 
<span data-post-id="14413914" class="post-digg-count">推荐(52)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14413914" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2021/02/07.html">2021年2月7日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/14386782.html">
    <span>
        C#/.NET/.NET Core推荐学习书籍（升职加薪，你值得拥有）
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： 作为一名程序员，我们无时无刻都要考虑着如何通过不断地学习来提升自己的核心竞争力。古人有云：“书中自有黄金屋，书中只有颜如玉”，说明了书籍的重要性，没错工作多年来，发现身边那些优秀的同事，大神都是喜欢看书，看文章，爱专研的人。因此，我们想要升职加薪，提升自己的竞争力需要我们在业余生活，假期中给        <a href="https://www.cnblogs.com/Can-daydayup/p/14386782.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-02-07 21:40
追逐时光者
<span data-post-id="14386782" class="post-view-count">阅读(5056)</span> 
<span data-post-id="14386782" class="post-comment-count">评论(24)</span> 
<span data-post-id="14386782" class="post-digg-count">推荐(52)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14386782" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2021/02/01.html">2021年2月1日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/14353082.html">
    <span>
        非关系型数据库（NOSQL）和关系型数据库（SQL）区别详解
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： 在我们的日常开发中，关系型数据库和非关系型数据库的使用已经是一个成熟的软件产品开发过程中必不可却的存储数据的工具了。那么用了这么久的关系数据库和非关系型数据库你们都知道他们之间的区别了吗？下面我们来详细的介绍一下。 关系型数据库（SQL）： 什么是（SQL）关系型数据库： 关系型数据库指的是        <a href="https://www.cnblogs.com/Can-daydayup/p/14353082.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-02-01 00:07
追逐时光者
<span data-post-id="14353082" class="post-view-count">阅读(579)</span> 
<span data-post-id="14353082" class="post-comment-count">评论(2)</span> 
<span data-post-id="14353082" class="post-digg-count">推荐(9)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14353082" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2021/01/24.html">2021年1月24日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/14321010.html">
    <span>
        .NET Core使用Source Link提高源代码调试体验和生产效率
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： 在我们日常开发过程中常常会使用到很多其他封装好的第三方中间件（NuGet依赖项）、类库或者是.NET框架中自带的库。但是当你想要对这些类库的方法设置断点调试，然后发现无法F11（逐语句）调试进源码中调用堆栈大部分显示为灰色，而不让您看到调用堆栈中较早发生的事情。如果可以设置断点并在NuGet        <a href="https://www.cnblogs.com/Can-daydayup/p/14321010.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-01-24 23:39
追逐时光者
<span data-post-id="14321010" class="post-view-count">阅读(2932)</span> 
<span data-post-id="14321010" class="post-comment-count">评论(22)</span> 
<span data-post-id="14321010" class="post-digg-count">推荐(40)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14321010" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2021/01/23.html">2021年1月23日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/14315774.html">
    <span>
        Angular学习资料大全和常用语法汇总（让后端程序员轻松上手）
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： 首先为什么要写这样的一篇文章呢？主要是因为前段时间写过一些关于Angualr的相关实战文章，有些爱学习的小伙伴对这方面比较感兴趣，但是又不知道该怎么入手（因为认识我的大多数小伙伴都是后端的同学），所以今天准备出一篇Angular学习资料汇总和日常开发中使用比较频繁的语法总结。让更多的后端程序        <a href="https://www.cnblogs.com/Can-daydayup/p/14315774.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-01-23 00:41
追逐时光者
<span data-post-id="14315774" class="post-view-count">阅读(488)</span> 
<span data-post-id="14315774" class="post-comment-count">评论(5)</span> 
<span data-post-id="14315774" class="post-digg-count">推荐(8)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14315774" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2021/01/16.html">2021年1月16日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/14286218.html">
    <span>
        解决Cannot find module &#39;@angular/compiler-cli&#39;
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： 今天clone之前做的一个angular项目，使用ng serve一直提示An unhandled exception occurred: Cannot find module &#39;@angular/compiler-cli&#39;。首先有这个提示的异常我们可以知道这其实就是我们项目中的相关依赖没有        <a href="https://www.cnblogs.com/Can-daydayup/p/14286218.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-01-16 17:27
追逐时光者
<span data-post-id="14286218" class="post-view-count">阅读(246)</span> 
<span data-post-id="14286218" class="post-comment-count">评论(0)</span> 
<span data-post-id="14286218" class="post-digg-count">推荐(1)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14286218" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2021/01/13.html">2021年1月13日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/14274932.html">
    <span>
        DevOps，CI，CD，自动化简单介绍
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： 随着企业应用的不断迭代，不断扩大，应用的发布发布可能涉及多个团队，如pc端，手机端，小程序端等等。应用发布也就成为了一项高风险，高压力的超过过程，以及应用的开发迭代的沟通，测试成本也大大的变得不可控了。这时候就出现了DevOps管理理念，CI，CD以及强大的部署自动化手段确保部署任务的可重复        <a href="https://www.cnblogs.com/Can-daydayup/p/14274932.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-01-13 22:59
追逐时光者
<span data-post-id="14274932" class="post-view-count">阅读(553)</span> 
<span data-post-id="14274932" class="post-comment-count">评论(0)</span> 
<span data-post-id="14274932" class="post-digg-count">推荐(3)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14274932" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2020/12/28.html">2020年12月28日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/14176386.html">
    <span>
        Angular实战之使用NG-ZORRO创建一个企业级中后台框架（进阶篇）
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： 上一篇文章我们讲了如何在创建的Angular项目中快速引入ng-zorro-antd企业中台组件库，并且快速构建后台管理页面框架模板。这一章主要介绍的是如何在创建好的后台管理页面框架的快速生成NG-ZORRO相关的组件，并且介绍Angular相关目录结构、生命周期函数，路由配置和使用相关知识        <a href="https://www.cnblogs.com/Can-daydayup/p/14176386.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-12-28 23:37
追逐时光者
<span data-post-id="14176386" class="post-view-count">阅读(564)</span> 
<span data-post-id="14176386" class="post-comment-count">评论(3)</span> 
<span data-post-id="14176386" class="post-digg-count">推荐(8)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14176386" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2020/12/23.html">2020年12月23日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/14170872.html">
    <span>
        Angular实战之使用NG-ZORRO创建一个企业级中后台框架（入门篇）
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： 在之前的一篇文章已经介绍过了，公司正在使用NG-ZORRO组件库开发后台应用，并且详细的介绍了Angular开发环境的搭建和项目的创建。这篇文章就是为了让大家熟悉了解我们该如何在Angular项目中使用到NG-ZORRO UI组件库搭建后台管理框架。 NG-ZORRO介绍： 官网地址：htt        <a href="https://www.cnblogs.com/Can-daydayup/p/14170872.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-12-23 00:03
追逐时光者
<span data-post-id="14170872" class="post-view-count">阅读(758)</span> 
<span data-post-id="14170872" class="post-comment-count">评论(0)</span> 
<span data-post-id="14170872" class="post-digg-count">推荐(5)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14170872" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2020/12/22.html">2020年12月22日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/14167181.html">
    <span>
        （已解决）&#39;ng&#39; 不是内部或外部命令，也不是可运行的程序或批处理文件
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： 之前在安装Angular环境的时候有个问题，就是通过命令成功安装了angular cli脚手架工具，但是在终端（win+r cmd）中输入ng version一直提示的是&#39;ng&#39; 不是内部或外部命令，也不是可运行的程序或批处理文件，然后重复删除安装了多次都是一样，最后发现原来没有添加到系统盘        <a href="https://www.cnblogs.com/Can-daydayup/p/14167181.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-12-22 00:07
追逐时光者
<span data-post-id="14167181" class="post-view-count">阅读(1332)</span> 
<span data-post-id="14167181" class="post-comment-count">评论(0)</span> 
<span data-post-id="14167181" class="post-digg-count">推荐(4)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14167181" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2020/12/21.html">2020年12月21日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/14166192.html">
    <span>
        Angular入门，开发环境搭建，使用Angular CLI创建你的第一个Angular项目
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： 最近一直在使用阿里的NG-ZORRO（Angular组件库）开发公司后端的管理系统，写了一段时间的Angular以后发现对于我们.NET后端开发而言真是非常的友善。因此这篇文章主要是对这段时间使用Angular做一些小总结，希望可以帮到有需要的同学。 Angular学习前必备基础知识点： T        <a href="https://www.cnblogs.com/Can-daydayup/p/14166192.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-12-21 10:30
追逐时光者
<span data-post-id="14166192" class="post-view-count">阅读(891)</span> 
<span data-post-id="14166192" class="post-comment-count">评论(17)</span> 
<span data-post-id="14166192" class="post-digg-count">推荐(11)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14166192" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2020/11/28.html">2020年11月28日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/14049190.html">
    <span>
        JS指定音频audio在某个时间点进行播放，获取当前音频audio的长度，音频时长格式转化
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： 今天接到一个需求，需要获取某个.mp3音频文件的时间长度和指定音频audio在某个时间点进行播放（比如说这个视频有4分钟，我要让它默认从第2秒的时候开始播放），这里当然想到了H5中的audio元素，当然我们平时看这个标签上显示的音频时间格式是时:分:秒的格式的因此需要涉及到秒和时间格式的转化        <a href="https://www.cnblogs.com/Can-daydayup/p/14049190.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-11-28 00:55
追逐时光者
<span data-post-id="14049190" class="post-view-count">阅读(447)</span> 
<span data-post-id="14049190" class="post-comment-count">评论(0)</span> 
<span data-post-id="14049190" class="post-digg-count">推荐(1)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14049190" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2020/11/26.html">2020年11月26日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/14042091.html">
    <span>
        Visual Studio使用Git忽略不想上传到远程仓库的文件
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： 作为一个.NET开发者而已，有着宇宙最强IDE：Visual Studio加持，让我们的开发效率得到了更好的提升。我们不需要担心环境变量的配置和其他代码管理工具，因为VS有丰富的拓展工具。废话不多说，直接进入正题。我们日常在使用VS开发相关的.NET项目时，经常会发现刚拉取下拉的代码什么都没        <a href="https://www.cnblogs.com/Can-daydayup/p/14042091.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-11-26 23:06
追逐时光者
<span data-post-id="14042091" class="post-view-count">阅读(517)</span> 
<span data-post-id="14042091" class="post-comment-count">评论(5)</span> 
<span data-post-id="14042091" class="post-digg-count">推荐(7)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14042091" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2020/11/12.html">2020年11月12日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/13961931.html">
    <span>
        使用git处理github中提交有冲突的pull request
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： 为什么要写这篇文章，因为前段时间有一个开源的github中的项目有一个朋友提交了一个pr看了下是帮忙优化了下代码（十分感谢这位网友）。但是他提交的pr刚好和我的项目有许多的冲突导致无法自动合并，在github中提示只能使用命令行指令进行合并，因为这种情况处理的比较少为了以后方便使用在这里记录        <a href="https://www.cnblogs.com/Can-daydayup/p/13961931.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-11-12 02:41
追逐时光者
<span data-post-id="13961931" class="post-view-count">阅读(538)</span> 
<span data-post-id="13961931" class="post-comment-count">评论(0)</span> 
<span data-post-id="13961931" class="post-digg-count">推荐(3)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13961931" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2020/11/10.html">2020年11月10日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/13676586.html">
    <span>
        走进C# abstract，了解抽象类与接口的异同
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： 最近在研究.NET Core的一些类库源码的时候发现在底层类库中使用了大量的抽象类，然而发现自己搬砖这么多年好像从来没有在项目中使用抽象类或者抽象方法去实现某个功能模块，并且对修饰符Abstract概念也只懂得一些皮毛（也就是面试的时候会问下其基本作用）。当然，咱们不懂就要去慢慢的学习了解，        <a href="https://www.cnblogs.com/Can-daydayup/p/13676586.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-11-10 01:39
追逐时光者
<span data-post-id="13676586" class="post-view-count">阅读(653)</span> 
<span data-post-id="13676586" class="post-comment-count">评论(6)</span> 
<span data-post-id="13676586" class="post-digg-count">推荐(9)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13676586" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2020/10/29.html">2020年10月29日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/13894517.html">
    <span>
        C#基础访问修饰符概述
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： 在编写面向对象语言时我们时长离不开相关类型和成员的相关访问性，而访问性的关键则是取决于访问修饰符的声明，其作用是用于指定类型或成员的可访问性。 访问修饰符的六种可访问性级别： public：共有的，访问不受限制； private：私有的，只能在当前类中访问； internal：内部的，只能在        <a href="https://www.cnblogs.com/Can-daydayup/p/13894517.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-10-29 02:06
追逐时光者
<span data-post-id="13894517" class="post-view-count">阅读(204)</span> 
<span data-post-id="13894517" class="post-comment-count">评论(0)</span> 
<span data-post-id="13894517" class="post-digg-count">推荐(4)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13894517" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2020/09/22.html">2020年9月22日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/13656575.html">
    <span>
        SQL Server通过创建临时表遍历更新数据
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： 前段时间新项目上线为了赶进度很多模块的功能都没有经过详细的测试导致了生成环境中的数据和实际数据对不上，因此需要自己手写一个数据库脚本来更新下之前的数据。（线上数据库用是SQL Server2012）关于数据统计汇总的问题肯定会用到遍历统计汇总，那么问题来了数据库中如何遍历呢？好像并没有for        <a href="https://www.cnblogs.com/Can-daydayup/p/13656575.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-09-22 23:42
追逐时光者
<span data-post-id="13656575" class="post-view-count">阅读(816)</span> 
<span data-post-id="13656575" class="post-comment-count">评论(2)</span> 
<span data-post-id="13656575" class="post-digg-count">推荐(4)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13656575" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2020/09/11.html">2020年9月11日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/12593165.html">
    <span>
        .NET Core使用NPOI将Excel中的数据批量导入到MySQL
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： 在之前的几篇博客中写过.NET Core使用NPOI导出Word和Excel的文章，今天把同样我们日常开发中比较常用的使用Excel导入数据到MySQL数据库中的文章给安排上。与此同时还把NPOI-ExportWordAndExcel-ImportExcelData这个开源项目升级到了.NE        <a href="https://www.cnblogs.com/Can-daydayup/p/12593165.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-09-11 23:31
追逐时光者
<span data-post-id="12593165" class="post-view-count">阅读(2081)</span> 
<span data-post-id="12593165" class="post-comment-count">评论(5)</span> 
<span data-post-id="12593165" class="post-digg-count">推荐(14)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12593165" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2020/09/08.html">2020年9月8日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/13630050.html">
    <span>
        ASP.NET Core 3.x Razor视图运行时刷新实时编译
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： 很长一段时间没有写过ASP.NET Core Razor（.cshtml）视图开发WEB页面了，今天刚好把之前做的一个由ASP.NET Core 2.2+Razor开发的项目升级到ASP.NET Core 3.1,在优化一些新功能的时候忽然发现了一个很蛋痛的问题，就是我每次修改了Razor页        <a href="https://www.cnblogs.com/Can-daydayup/p/13630050.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-09-08 00:03
追逐时光者
<span data-post-id="13630050" class="post-view-count">阅读(607)</span> 
<span data-post-id="13630050" class="post-comment-count">评论(3)</span> 
<span data-post-id="13630050" class="post-digg-count">推荐(3)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13630050" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2020/08/01.html">2020年8月1日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/12638301.html">
    <span>
        ASP.NET MVC+LayUI视频上传
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： 前段时间在使用APS.NET MVC+LayUI做视频上传功能的时，发现当上传一些内存比较大的视频就会提示上传失败，后来通过查阅相关资料发现.NET MVC框架为考虑安全问题，在运行时对请求的文件的长度（大小）做了限制默认为4MB（4096KB），因此我们需要在Web.Config中设置最大        <a href="https://www.cnblogs.com/Can-daydayup/p/12638301.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-08-01 01:52
追逐时光者
<span data-post-id="12638301" class="post-view-count">阅读(1415)</span> 
<span data-post-id="12638301" class="post-comment-count">评论(14)</span> 
<span data-post-id="12638301" class="post-digg-count">推荐(10)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12638301" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2020/07/26.html">2020年7月26日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/13379073.html">
    <span>
        将Js数组对象中的某个属性值升序排序，并指定数组中的某个对象移动到数组的最前面
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：需求整理： 本篇文章主要实现的是将一个数组的中对象的属性值通过升序的方式排序，然后能够让程序可以指定对应的数组对象移动到程序的最前面。 数组如下所示： var arrayData= [{name: &quot;夏明&quot;, Id:24}, {name: &quot;小红&quot;, Id: 25},{name: &quot;大袁&quot;, Id:        <a href="https://www.cnblogs.com/Can-daydayup/p/13379073.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-07-26 03:47
追逐时光者
<span data-post-id="13379073" class="post-view-count">阅读(1321)</span> 
<span data-post-id="13379073" class="post-comment-count">评论(0)</span> 
<span data-post-id="13379073" class="post-digg-count">推荐(2)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13379073" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2020/07/06.html">2020年7月6日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/13246946.html">
    <span>
        Navicat远程连接MySQL 提示1045 - Access denied for user &#39;root&#39;@&#39;223.74.158.192&#39;(using password：YES)
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：问题： 今天在自己的阿里云服务器上（Window Server2012 R2）安装了一个MySQL5.7.26，在阿里云服务器中通过本地链接是正常的，但是当在自己的电脑上使用Navicat连接是提示：1045 - Access denied for user &#39;root&#39;@&#39;223.74.158.1        <a href="https://www.cnblogs.com/Can-daydayup/p/13246946.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-07-06 01:34
追逐时光者
<span data-post-id="13246946" class="post-view-count">阅读(1667)</span> 
<span data-post-id="13246946" class="post-comment-count">评论(0)</span> 
<span data-post-id="13246946" class="post-digg-count">推荐(2)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13246946" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2020/07/05.html">2020年7月5日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/13244542.html">
    <span>
        Vs Code推荐安装插件
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： Visual Studio Code是一个轻量级但功能强大的源代码编辑器，轻量级指的是下载下来的Vs Code其实就是一个简单的编辑器，强大指的是支持多种语言的环境插件拓展，也正是因为这种支持插件式安装环境开发让Vs Code成为了开发语言中的霸主，让同时支持开发多种语言成为了可能。俗话说的        <a href="https://www.cnblogs.com/Can-daydayup/p/13244542.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-07-05 12:57
追逐时光者
<span data-post-id="13244542" class="post-view-count">阅读(2155)</span> 
<span data-post-id="13244542" class="post-comment-count">评论(7)</span> 
<span data-post-id="13244542" class="post-digg-count">推荐(9)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13244542" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/Can-daydayup/archive/2020/06/23.html">2020年6月23日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/Can-daydayup/p/13128633.html">
    <span>
        【最全面】SourceTree使用教程详解（连接远程仓库，克隆，拉取，提交，推送，新建/切换/合并分支，冲突解决，提交PR）
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言： 俗话说的好工欲善其事必先利其器，Git分布式版本控制系统是我们日常开发中不可或缺的。目前市面上比较流行的Git可视化管理工具有SourceTree、Github Desktop、TortoiseGit，综合网上的一些文章分析和自己的日常开发实践心得个人比较推荐开发者使用SourceTree，        <a href="https://www.cnblogs.com/Can-daydayup/p/13128633.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-06-23 01:25
追逐时光者
<span data-post-id="13128633" class="post-view-count">阅读(13331)</span> 
<span data-post-id="13128633" class="post-comment-count">评论(12)</span> 
<span data-post-id="13128633" class="post-digg-count">推荐(23)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13128633" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>



<div class="topicListFooter">
    <div id="nav_next_page">
        
    <a href="https://www.cnblogs.com/Can-daydayup/default.html?page=2">
        下一页
    </a>

    </div>    
</div>






<script>
    updatePostStats(
        $(".post-view-count").map(function () { return this.dataset.postId }).get(),
        function(id, count) { $(".post-view-count[data-post-id=" + id + "]").text("阅读(" + count + ")") },
        function(id, count) { $(".post-comment-count[data-post-id=" + id + "]").text("评论(" + count + ")") },
        function(id, count) { $(".post-digg-count[data-post-id=" + id + "]").text("推荐(" + count + ")") });
</script>
	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->
	<div id="sideBar">
		<div id="sideBarMain">
			<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>
<div id="sidebar_c3"></div>
			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2021 追逐时光者
<br /><span id="poweredby">Powered by .NET 5.0 on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    <div id="page_end_html">
        <!--图片放大插件begin-->
<!-- lightbox的样式 -->
<link href="https://blog-static.cnblogs.com/files/Can-daydayup/lightbox.css" rel="stylesheet">

<!-- lightbox.js核心代码 -->
<script src="https://blog-static.cnblogs.com/files/Can-daydayup/lightbox-plus-jquery.js"></script>

<script type='text/javascript'>
$('#cnblogs_post_body img').wrap(function(){return "<a href='"+$(this).attr("src")+"' data-lightbox='example-set'></a>"});
$(".code_img_closed").unwrap();
$(".code_img_opened").unwrap();
</script>

<!--图片放大插件end-->
    </div>

    <input type="hidden" id="antiforgery_token" value="CfDJ8L-rpLgFVEJMgssCVvNUAjv60o4D4n5WB9gxZGFcp6e9CCz4v92X9Upu9T9_9GB1Ikst6cCi-08d8pZTQMbQTsk2uWUPurXW0Oqrqr-NKvwE1Glww03VPWPs0rlNo0OQ1RzJ4-MecZdfDUwtZEhM5XA" />
</body>
</html>
